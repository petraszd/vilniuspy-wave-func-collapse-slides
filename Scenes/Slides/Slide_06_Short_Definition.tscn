[gd_scene load_steps=4 format=2]

[ext_resource path="res://Fonts/TextSmallFont.tres" type="DynamicFont" id=1]
[ext_resource path="res://Fonts/TextFont.tres" type="DynamicFont" id=2]
[ext_resource path="res://Fonts/H1Font.tres" type="DynamicFont" id=3]

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="MarginContainer" type="MarginContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
custom_constants/margin_right = 60
custom_constants/margin_top = 20
custom_constants/margin_left = 60
custom_constants/margin_bottom = 40

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer"]
margin_left = 60.0
margin_top = 20.0
margin_right = 1860.0
margin_bottom = 1040.0

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer"]
margin_right = 1800.0
margin_bottom = 85.0
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_fonts/font = ExtResource( 3 )
text = "Wave Function Collapse"

[node name="HSeparator" type="HSeparator" parent="MarginContainer/VBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
margin_top = 93.0
margin_right = 1800.0
margin_bottom = 153.0
custom_constants/separation = 60

[node name="RichTextLabel" type="RichTextLabel" parent="MarginContainer/VBoxContainer"]
margin_top = 161.0
margin_right = 1800.0
margin_bottom = 1020.0
size_flags_vertical = 3
custom_colors/default_color = Color( 0, 0, 0, 1 )
custom_fonts/bold_font = ExtResource( 1 )
custom_fonts/normal_font = ExtResource( 2 )
bbcode_enabled = true
bbcode_text = "- Start with a grid of tiles (2D, 3D, 4D?, ...)
 [b] (In my examples it is 2D)[/b]

- Each tile starts it's life with ability to hold N number of states
  [b] (In my examples state == image fragment)[/b]

- Each tile can be collapsed into one particular state
 [b] (In my exampes some particular image fragment is selected)[/b]

- Each state is limited by constrains in relation with other states

- Loop:
    - Pick a random tile with >1 possible states
    - Select a random available state (Collapse it)
    - Recursively mark neighbouring tiles according to constrains
    - Repeat until all tiles are collapsed"
text = "- Start with a grid of tiles (2D, 3D, 4D?, ...)
  (In my examples it is 2D)

- Each tile starts it's life with ability to hold N number of states
   (In my examples state == image fragment)

- Each tile can be collapsed into one particular state
  (In my exampes some particular image fragment is selected)

- Each state is limited by constrains in relation with other states

- Loop:
    - Pick a random tile with >1 possible states
    - Select a random available state (Collapse it)
    - Recursively mark neighbouring tiles according to constrains
    - Repeat until all tiles are collapsed"
